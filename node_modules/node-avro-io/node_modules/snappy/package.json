{
  "author": {
    "name": "David Björklund",
    "email": "david.bjorklund@gmail.com"
  },
  "name": "snappy",
  "description": "Nodejs bindings to Google's Snappy compression library",
  "version": "2.1.2",
  "homepage": "https://github.com/kesla/node-snappy",
  "repository": {
    "type": "git",
    "url": "git://github.com/kesla/node-snappy.git"
  },
  "main": "lib/snappy.js",
  "directories": {
    "lib": "."
  },
  "scripts": {
    "test": "vows --spec -i",
    "install": "node-gyp rebuild"
  },
  "engines": {
    "node": ">= 0.4.5"
  },
  "dependencies": {
    "bindings": "~1.1.1",
    "nan": "~0.6.0"
  },
  "devDependencies": {
    "vows": "~0.7.0"
  },
  "gypfile": true,
  "readme": "# Node-snappy [![Build Status](https://secure.travis-ci.org/kesla/node-snappy.png)](http://travis-ci.org/kesla/node-snappy)\n\n[![NPM](https://nodei.co/npm/snappy.png?downloads)](https://nodei.co/npm/snappy/)\n\n## About\n\nNode module/wrapper for Google's fast compressor/decompressor: <http://code.google.com/p/snappy/>\n\nSnappy is a compression/decompression library. It does not aim for maximum compression, or compatibility with any other compression library; instead, it aims for very high speeds and reasonable compression. For instance, compared to the fastest mode of zlib, Snappy is an order of magnitude faster for most inputs, but the resulting compressed files are anywhere from 20% to 100% bigger. On a single core of a Core i7 processor in 64-bit mode, Snappy compresses at about 250 MB/sec or more and decompresses at about 500 MB/sec or more.\n\nSnappy is widely used inside Google, in everything from BigTable and MapReduce to our internal RPC systems. (Snappy has previously been referred to as “Zippy” in some presentations and the likes.)\n\n## Installation\n\n```\n  npm install snappy\n```\n\n## Examples\n### String\n```js\nvar snappy = require('snappy');\n// Use synchronous version\nvar compressed = snappy.compressSync('string to compress');\nvar result = snappy.decompressSync(compressed, snappy.parsers.string);\n// result will be string instead of Buffer\nconsole.log(result);\n```\n\n### JSON\n```js\nvar snappy = require('snappy');\n// Snappy automatically convert json to a string\nsnappy.compress({\"foo\": \"bar\"}, function(err, compressed){\n  snappy.decompress(compressed, snappy.parsers.json, function(err, result){\n    // result will be json instead of Buffer\n    console.log(result[\"foo\"]);\n  });\n});\n```\n\n## API\n### snappy.compress(input, cb)\n\nCompress `input`, which can be a Buffer, String or arbitrary JavaScript object and call `cb` with `err` and `compressed`.\n\n### snappy.compressSync(input)\n\nCompress `input`, which can be a Buffer, String or arbitrary JavaScript object and return `compressed`. Throws if an error occurs.\n\n### snappy.decompress(compressed, parse, cb)\n\nDecompress `compressed` using `parse` as parser (defaults to `raw`) and call `cb` with `err` and `decompressed`.\n\n### snappy.decompressSync(str, parse)\n\nDecompress `compressed` using `parse` as parser (defaults to `raw`) and return `decompressed`. Throws if an error occurs.\n\n## Parsers\n\n* json\n* string\n* raw\n\n## License\nCopyright (c) 2013 David Björklund\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/kesla/node-snappy/issues"
  },
  "_id": "snappy@2.1.2",
  "_from": "snappy@latest"
}
